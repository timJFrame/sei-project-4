{"version":3,"sources":["lib/auth.js","components/common/Nav.js","components/common/Home.js","lib/api.js","utils/useform.js","utils/ImageUpload.js","components/posts/PostCard.js","components/posts/PostIndex.js","components/auth/Register.js","components/auth/Login.js","components/user/Profile.js","components/user/User.js","components/common/CreatedMessage.js","components/common/RecievedMessage.js","components/common/Footer.js","App.js","index.js"],"names":["getToken","window","localStorage","getItem","logout","removeItem","getPayLoad","token","parts","split","length","JSON","parse","atob","isAuthenticated","payload","Math","round","Date","now","exp","isOwner","userId","sub","Nav","isLoggedIn","history","useHistory","useLocation","className","to","onClick","push","Home","ref","React","useRef","useState","items","set","transistions","useTransition","from","opacity","height","innerHeight","transfrom","color","enter","transform","leave","update","reset","useCallback","current","map","clearTimeout","setTimeout","useEffect","item","props","rest","key","div","style","overflow","headers","Authorization","baseUrl","registerUser","formdata","axios","post","loginUser","getSingleUser","id","get","deleteSingleUser","delete","getCurrentUser","friendUser","getAllPosts","postUserPost","editSinglePost","put","deleteSinglePost","getSinglePost","postComment","deleteComment","postLike","postChat","data","postMessage","deleteChat","useForm","intialstate","setFormdata","errors","setErrors","handleChange","e","nextState","target","name","value","nextErrorState","ImageUploadField","onChange","labelText","editImage","handleUpload","event","a","FormData","append","files","process","res","url","src","alt","type","PostCard","commentOwner","editPostId","owner","createdAt","postText","postImage","comments","likedBy","setPosts","isPostOwner","edit","setEdit","setEditImage","text","commentData","setCommentData","handleCommentSubmit","preventDefault","console","log","response","handleLike","handleCommentUpate","handleCommentDelete","commentId","handlePostDelete","postId","article","initial","animate","exit","profileImage","username","date","dateArray","slice","time","reorderDate","getData","onSubmit","placeholder","ImageUpload","comment","PostIndex","posts","handlePostSubmit","section","width","Register","email","password","password_confirmation","bio","profile_image","handleSubmit","passwordConfirmation","Login","setItem","vaule","detail","Profile","currentUser","setCurrentUser","handleProfileDelete","dateJoined","friendedBy","friend","createdPosts","likedPosts","postedComments","User","useParams","user","setUser","addedFriendMessage","setAddedFriendMessage","handleAddingFriend","CreatedMessage","chatId","recieverId","recipient","communications","chat","receiver","messageData","setMessageData","handleMessageSubmit","handleMessageDelete","chatid","useSpring","config","duration","fade","message","sender","recieverid","handleMessageChangeDetails","RecievedMessage","Footer","users","setUsers","chatboard","setChatboard","pathname","filter","handleUserSelection","parseInt","createdChats","receivedChats","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b771141.chunk.js","sourcesContent":["//*Sets a user token into local storage\nexport function setToken(token){\n  window.localStorage.setItem('token', token)\n}\n\n//*Gets a user token from local storage\nexport function getToken(){\n  return window.localStorage.getItem('token')\n}\n\n//*Logs user out\nexport function logout(){\n  window.localStorage.removeItem('token')\n}\n\n//*Gets payload from token\nfunction getPayLoad(){\n  const token = getToken()\n  if (!token) return false\n  const parts = token.split('.')\n  if (parts.length < 2) return false\n  return JSON.parse(atob(parts[1]))\n}\n\n//*Checks is a user is Authenticated\nexport function isAuthenticated(){\n  const payload = getPayLoad()\n  if (!payload) return false\n  const now = Math.round(Date.now() / 1000)\n  return now < payload.exp\n}\n\n//*Gets a users id from token in local storage\nexport function getUserId(){\n  return getPayLoad.sub()\n}\n\n//*Checks if the user that is logged in is the owner of what they are trying to edit or delete\nexport function isOwner(userId){\n  const payload = getPayLoad()\n  if (!payload) return false\n  return userId === payload.sub\n}","import React from 'react'\nimport { Link, useHistory, useLocation } from 'react-router-dom'\nimport {  logout, isAuthenticated } from '../../lib/auth'\n\n\nfunction Nav(){\n\n  const isLoggedIn = isAuthenticated()\n  const history = useHistory()\n\n  useLocation()\n\n  const handleLogout = () => {\n    logout()\n    history.push('/')\n    \n  }\n\n\n  return (\n    <nav className=\"nav-container\">\n      <div className=\"logo-container\">\n        <Link to=\"/\">\n          <button className=\"button button-clear logo\">Vine</button>\n        </Link>\n      </div>\n      <div className=\"nav-links-container\">\n        {isLoggedIn &&\n         <>\n           <Link to=\"/feed\">\n             <button className=\"button button-clear\">Feed</button>\n           </Link>\n\n           <Link to=\"/profile\">\n             <button className=\"button button-clear\">Profile</button>\n           </Link>\n         </>\n        }\n        {\n          !isLoggedIn ?\n            <>\n              <Link to=\"/register\">\n                <button className=\"button button-clear\">Register</button>\n              </Link>\n\n              <Link to=\"/login\">\n                <button className=\"button button-clear nav-button\">Login</button>\n              </Link>\n            </>\n            :\n            <>\n              <button className=\"button button-clear nav-button\" onClick={handleLogout}>Logout</button>\n            </>\n        }\n      </div>\n    </nav>\n  \n  )\n}\n\nexport default Nav","import React from 'react'\n// import { useLocation } from 'react-router-dom'\n\nimport { useTransition, animated } from 'react-spring'\n\nfunction Home(){\n\n  const ref = React.useRef([])\n  const [items, set] = React.useState([])\n  const transistions = useTransition(items, null, {\n    from: { opacity: 0, height: 0, innerHeight: 0, transfrom: 'perspective(600px) rotateX(0deg)', color: '#14adad' },\n    enter: [\n      { opacity: 1, height: 80, innerHeight: 80 },\n      { transform: 'perspective(200px) rotateX(180deg)', color: '#14adad' },\n      { transform: 'perspective(200px) rotateX(0deg)' },\n      { transform: 'perspective(200px) rotateX(0deg)' }\n    ],\n    leave: [{ color: '#14adad' }, { innerHeight: 0 }, { opacity: 0, height: 0 }],\n    update: { color: '#14adad' }\n  })\n\n  const reset = React.useCallback(() => {\n    ref.current.map(clearTimeout)\n    ref.current = []\n    set([])\n    ref.current.push(setTimeout(() => set(['Bananas about bulbs..', 'Mad about mulch...', 'Passionate about perennials...']), 200))\n    ref.current.push(setTimeout(() => set(['Bananas about bulbs..', 'Passionate about perennials...']), 500))\n    ref.current.push(setTimeout(() => set(['Bananas about bulbs..', 'Mad about mulch...', 'Passionate about perennials...']), 800))\n  }, [])\n\n  React.useEffect(() => void reset(), [])\n\n  return (\n    <section\n     \n      className=\"page-container\">\n      <article>\n        {transistions.map(({ item, props: { innerHeight, ...rest }, key }) => (\n          <animated.div className=\"transitions-item\" key={key} style={rest} onClick={reset} > \n            <animated.div style={{ overflow: 'hidden', height: innerHeight }}>{item}</animated.div>\n\n          </animated.div>\n        ))}\n      </article>\n    </section>\n  \n  )\n}\n\nexport default Home","import axios from 'axios'\nimport { getToken } from './auth'\n\n//*Sets a users token into the request header\nfunction headers(){\n  return {\n    headers: { Authorization: `Bearer ${getToken()}` }\n  }\n}\n\n//*Base URL\nconst baseUrl = '/api/'\n\n//*Register a user\nexport function registerUser(formdata){\n  return axios.post(`${baseUrl}auth/register/`, formdata)\n}\n\n//*Logs a user in\nexport function loginUser(formdata){\n  return axios.post(`${baseUrl}auth/login/`, formdata)\n}\n\n//*Gets a single users profile\nexport function getSingleUser(id){\n  return axios.get(`${baseUrl}auth/user/${id}/`, headers())\n}\n\n//*Delete a single user \nexport function deleteSingleUser(id){\n  return axios.delete(`${baseUrl}auth/user/${id}/`, headers())\n}\n\n//* The profile of the user currently logged in\nexport function getCurrentUser(){\n  return axios.get(`${baseUrl}auth/profile/`, headers())\n}\n\n//*Gets all users\nexport function getAllUsers(){\n  return axios.get(`${baseUrl}auth/`)\n}\n\n\n//*Friends a user\nexport function friendUser(id){\n  return axios.post(`${baseUrl}auth/user/${id}/friend/`, null, headers())\n}\n\n//*Gets all posts\nexport function getAllPosts(){\n  return axios.get(`${baseUrl}posts/`)\n}\n\n//*Post a post\nexport function postUserPost(formdata){\n  return axios.post(`${baseUrl}posts/`, formdata, headers())\n}\n\n//*Edit a post\nexport function editSinglePost(id, formdata){\n  return axios.put(`${baseUrl}posts/${id}/`, formdata, headers())\n}\n\n//*Delete a single post\nexport function deleteSinglePost(id){\n  return axios.delete(`${baseUrl}posts/${id}/`, headers())\n}\n\n//*Get a single post\nexport function getSinglePost(id){\n  return axios.get(`${baseUrl}posts/${id}/`, headers())\n}\n\n\n//*Post a comment on a post\nexport function postComment(formdata){\n  return axios.post(`${baseUrl}comments/`, formdata, headers())\n}\n\n//*Deletes a comment on a post\nexport function deleteComment(id){\n  return axios.delete(`${baseUrl}comments/${id}/`, headers())\n}\n\n//*Like a post\nexport function postLike(id){\n  return axios.post(`${baseUrl}posts/${id}/like/`, null, headers())\n}\n\n//*Starts a chat between users\nexport function postChat(data){\n  return axios.post(`${baseUrl}chats/`, data, headers())\n}\n\n//*Sends a message from one user to another\nexport function postMessage(formdata){\n  return axios.post(`${baseUrl}communications/`, formdata, headers())\n}\n\n//*Delete a chat\nexport function deleteChat(id){\n  return axios.delete(`${baseUrl}chats/${id}/`, headers())\n}","import React from 'react'\n\n//*Function captures data entered by users in forms into state and catchs any errors on the data that has been entered\n\nfunction useForm(intialstate){\n  const [formdata, setFormdata] = React.useState(intialstate)\n  const [errors, setErrors] = React.useState(intialstate)\n\n  const handleChange = (e) => {\n    const nextState = { ...formdata, [e.target.name]: e.target.value }\n    const nextErrorState = { ...errors, [e.target.name]: '' }\n\n    setFormdata(nextState)\n    setErrors(nextErrorState)\n  }\n  return {\n    formdata,\n    errors,\n    handleChange,\n    setFormdata,\n    setErrors\n  }\n}\n\nexport default useForm\n\n","import React from 'react'\nimport axios from 'axios'\n\n\nconst uploadUrl = process.env.REACT_APP_CLOUDINARY_URL\nconst uploadPreset = process.env.REACT_APP_CLOUDINARY_UPLOAD_PRESET\n\n//*Component that handles uploading an image from Cloudinary wesbite and recives a url back of the uploaded image and the url is captured into state to be used in post requests to the data base\n\nfunction ImageUploadField({ onChange, value, name, labelText, editImage }){\n\n\n\n  const handleUpload = async event => {\n    const data = new FormData()\n    data.append('file', event.target.files[0])\n    data.append('upload_preset', uploadPreset)\n    const res = await axios.post(uploadUrl, data)\n\n    onChange({ target: { name, value: res.data.url } })\n  }\n\n  return (\n    <>\n      \n      {value ? \n        <div className=\"profile-preview-image-container\">\n          <img src={value} alt=\"selected\" \n            className={ editImage ? 'edit-post-image'  : 'preview-image'}/>\n        </div>\n        :\n        \n        <>\n        \n          <label>{labelText || 'Upload Image'}</label>\n          <input\n            type=\"file\"\n            onChange={handleUpload}\n            name={name}\n          />\n        </>\n      }\n      {editImage &&\n      <>\n        <label>{labelText || 'Upload Image'}</label>\n        <input\n          type=\"file\"\n          onChange={handleUpload}\n          name={name}\n        />\n      </>\n      }\n      \n    </>\n\n  )\n}\n\nexport default ImageUploadField","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { motion } from 'framer-motion'\nimport { postComment, postLike, getSinglePost, editSinglePost, deleteComment, deleteSinglePost } from '../../lib/api'\nimport  useForm  from '../../utils/useform'\nimport ImageUploadField from '../../utils/ImageUpload'\nimport { isOwner } from '../../lib/auth'\n\n\nfunction PostCard({ id, owner, createdAt, postText, postImage, comments, likedBy, getAllPosts, setPosts }){\n\n  //*Global Variables\n  const isPostOwner = isOwner(owner.id)\n  let commentOwner\n  const [edit, setEdit] = React.useState(false)\n  const [editImage, setEditImage] = React.useState(false)\n\n  //* Reformats the date from post request\n  const reorderDate = (date) => {\n    const dateArray = date.slice(0, 10).split('-')\n    const time = date.slice(11, 16)\n    return `${time}, ${dateArray[2]}.${dateArray[1]}.${dateArray[0]}`\n  }\n\n \n  //* State to capture comment\n  const [ commentData, setCommentData ] = React.useState({\n    text: '',\n    post: `${id}`\n  })\n\n  const handleCommentChange = (e) => {\n    setCommentData({ ...commentData, [e.target.name]: e.target.value })\n  }\n\n\n  //*Handles submitting a comment vis post request\n  const handleCommentSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      await postComment(commentData)\n      setCommentData({ text: '', post: id })\n      const { data } =  await getAllPosts()\n      setPosts(data)\n    } catch (err){\n      console.log(err.response.data)\n    }\n  }\n\n\n  //*Handles liking a post\n  const handleLike = async (id) => {\n    try {\n      await postLike(id)\n      const { data } = await getAllPosts()\n      setPosts(data)\n    } catch (err){\n      console.log(err)\n    }\n  }\n\n  //*Variable to store the id of the post that is clicked on\n  let editPostId \n\n  const handleEditLoad = () => {\n    setEdit(true)\n    setEditImage(true)\n    editPostId = id\n    const getData = async () => {\n      const { data } = await getSinglePost(editPostId)\n      setFormdata(data)\n    }\n    getData()\n  }\n\n  //* Captures from data when a comment is edited\n  const { formdata, handleChange, setFormdata } = useForm({\n    postText: '',\n    postImage: ''\n  })\n\n  \n  //* Handles submitting the put request when a comment is edited\n  const handleCommentUpate = async (e) => {\n    e.preventDefault()\n    try {\n      await editSinglePost(id, formdata)\n      const { data } = await getAllPosts()\n      setPosts(data)\n      setEdit(false)\n      setEditImage(false)\n    } catch (err){\n      console.log(err.response.data)\n    }\n  }\n\n  //*Handles deleting comment\n  const handleCommentDelete = async (commentId) => {\n    const id = commentId\n    try {\n      await deleteComment(id)\n      const { data } = await getAllPosts()\n      setPosts(data)\n    } catch (err){\n      console.log(err)\n    }\n\n  }\n\n  //*Hanldes deleting a post\n  const handlePostDelete = async () => {\n    try {\n      const postId = id\n      await deleteSinglePost(postId)\n      const { data } = await getAllPosts()\n      setPosts(data)\n    } catch (err){\n      console.log(err)\n    }\n  }\n\n  return (\n    <motion.article\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n      className=\"user-post-container\">\n      \n   \n      <div className=\"user-post-details-and-edit-button-container\">\n       \n        <div className=\"user-post-details\">\n          <Link to={`/user/${owner.id}`}>\n            <img src={owner.profileImage} alt={owner.username} className=\"user-post-image\"/>\n          </Link>\n          <div className=\"user-post-date-name\">\n            <h5 className=\"user-post-name\">{owner.username}</h5>\n            <p>{reorderDate(createdAt)}</p>\n          </div>\n        </div>\n       \n\n        {isPostOwner &&\n       <>\n         {!edit &&\n         <>\n           <div className=\"modify-post-button-container\">\n             <button className=\"button-green button-outline modify-button button-small\" onClick={handleEditLoad}>Edit</button>\n           </div>\n           <div className=\"modify-post-button-container\">\n             <button className=\"button-red button-outline modify-button button-small\" onClick={handlePostDelete}>Delete</button>\n           </div>\n         </>\n         }\n       </>\n        }\n      </div>\n    \n    \n      {!edit ?\n        <>\n          <div className=\"user-post-text\">\n            <p>{postText}</p>\n          </div>\n\n          <div className=\"user-post-image-container\">\n            <img src={postImage} alt=\"Post Image\" className=\"user-post-blog-image\"/>\n          </div>\n        </>\n        :\n        <form className=\"edit-post-form\" onSubmit={handleCommentUpate}>\n          <fieldset>\n            <textarea \n              name=\"postText\"\n              value={formdata.postText}\n              onChange={handleChange}\n              placeholder=\"Write your post here....\" \n              className=\"create-post-text-area\"/>\n\n            <div className=\"image-selector\">\n              <ImageUploadField\n                name=\"postImage\"\n                value={formdata.postImage}\n                onChange={handleChange}\n                labelText=\"Post Image\"\n                editImage={editImage}\n              />\n            </div>\n          </fieldset>\n          <button className=\"button-green button-outline form-sumbit \" type=\"submit\">Save Change</button>\n        </form>\n      }\n      \n      <div className=\"comments-likes-display-conatiner\">\n        <div className=\"comments-feed-container\">\n          {comments ?\n            comments.map(comment => (\n              <>\n                {commentOwner = isOwner(comment.owner.id)}\n                <div key={comment.createdAt} className=\"comment-text-and-button-container\">\n                  <div  className=\"user-comment-text\">\n                    <p><strong>{comment.owner.username}</strong></p>\n                    <p>{comment.text}</p>\n                  </div>\n\n                  {commentOwner &&\n                    <div className=\"comment-delete-container\">\n                      <button className=\"button-red button-outline button-small\" onClick={() => handleCommentDelete(comment.id)}>x</button>\n                    </div>\n                  }\n                </div>\n\n\n              </>\n            ))\n            :\n            <p>Be the first to comment!!</p>\n          }\n        </div>\n        {likedBy ?\n\n          <div className=\"likes-feed-view-container\">\n            <button className=\"button-green button-outline button-small view-like-button\" onClick={() => handleLike(id)}>Like</button>\n            <p className=\"view-like\">{`${likedBy.length} likes`}</p>\n\n          </div>\n          :\n          <p></p>\n        }\n      </div>\n    \n\n   \n      <form className=\"comment-form\" onSubmit={handleCommentSubmit}> \n        <fieldset>\n          <input \n            type=\"text\" \n            placeholder=\"Write a comment\" \n            className=\"comment-input\"\n            name=\"text\"\n            value={commentData.text}\n            onChange={handleCommentChange}\n          />\n        </fieldset>\n        <div className=\"submit-comment-container\">\n          <button className=\"button-green button-outline form-sumbit \" type=\"submit\" >Send</button>\n        </div>\n      </form>\n\n    </motion.article>\n\n\n        \n  )\n}\n\nexport default PostCard","import React from 'react'\nimport Loader from 'react-loader-spinner'\nimport { motion } from 'framer-motion'\n\nimport { getAllPosts, postUserPost } from '../../lib/api'\nimport PostCard from './PostCard'\nimport useForm from '../../utils/useform'\nimport ImageUploadField from '../../utils/ImageUpload'\n\n\nfunction PostIndex(){\n\n  const [posts, setPosts] = React.useState(null)\n\n  React.useEffect(() => {\n    const getData = async () => {\n      try {\n        const { data } = await getAllPosts()\n        setPosts(data)\n      } catch (err){\n        console.log(err)\n      }\n    }\n    getData()\n  }, [])\n\n \n  const { formdata, setFormdata, handleChange } = useForm({\n    postText: '',\n    postImage: ''\n  })\n\n  const handlePostSubmit = async (e) =>{\n    e.preventDefault()\n    try {\n      await postUserPost(formdata)\n      setFormdata({ postText: '', postImage: '' })\n      const { data } = await getAllPosts()\n      setPosts(data)\n    } catch (err){\n      console.log(err)\n    }\n  }\n\n\n \n\n  return (\n    <motion.section\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }} \n      className=\"page-feed-container\">\n      <form className=\"user-post-form\" onSubmit={handlePostSubmit}>\n        <fieldset>\n          <textarea \n            name=\"postText\"\n            value={formdata.postText}\n            onChange={handleChange}\n            placeholder=\"Write your post here....\" \n            className=\"create-post-text-area\"/>\n\n          <div className=\"image-selector\">\n            <ImageUploadField\n              name=\"postImage\"\n              value={formdata.postImage}\n              onChange={handleChange}\n              labelText=\"Post Image\"\n            />\n          </div>\n        </fieldset>\n\n        \n        <button className=\"button-green button clear button-outline form-sumbit \" type=\"submit\">Create Post</button>\n      </form>\n      {posts ?\n        posts.map(post => (\n          <PostCard key={post.id} {...post}\n            getAllPosts={getAllPosts}\n            setPosts={setPosts}\n          />\n        ))\n        :\n        <Loader type=\"ThreeDots\" color=\"#85837f\" height={80} width={80} className=\"loading-spinner\"/>\n\n      }\n    \n    </motion.section>\n  )\n}\n\nexport default PostIndex","import React from 'react'\nimport useForm from '../../utils/useform'\nimport { motion } from 'framer-motion'\nimport ImageUploadField from '../../utils/ImageUpload'\nimport { registerUser } from '../../lib/api'\nimport { useHistory } from 'react-router-dom'\n\nfunction Register(){\n  const history = useHistory()\n\n  //*Captures users data from form\n  const { handleChange, formdata, errors, setErrors } = useForm({\n    username: '',\n    email: '',\n    password: '',\n    password_confirmation: '',\n    bio: '',\n    profile_image: ''\n  })\n\n  //*Hanldes submitting post request to database to register new user\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      await registerUser(formdata)\n      history.push('/login')\n    } catch (err){\n      setErrors(err.response.data)\n    }\n  }\n\n  return (\n    <motion.section\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n      className=\"form-container\">\n      <form onSubmit={handleSubmit}>\n        <fieldset>\n          <label>Username</label>\n          <input type=\"text\" \n            name=\"username\"\n            value={formdata.username}\n            onChange={handleChange}\n            placeholder=\"Username\"\n          />\n          {errors.username && <p className=\"form-error-message\">{errors.username}</p>}\n\n          <label>Email</label>\n          <input type=\"text\" \n            name=\"email\"\n            value={formdata.email}\n            onChange={handleChange}\n            placeholder=\"Email\"/>\n          {errors.email && <p className=\"form-error-message\">{errors.email}</p>}\n\n\n          <label>Password</label>\n          <input type=\"password\" \n            name=\"password\"\n            value={formdata.password}\n            onChange={handleChange}\n            placeholder=\"Password\"/>\n          {errors.password && <p className=\"form-error-message\">{errors.password}</p>}\n\n\n          <label>Password Confirmation</label>\n          <input type=\"password\"\n            name=\"password_confirmation\"\n            value={formdata.password_confirmation}\n            onChange={handleChange}\n            placeholder=\"Password Confirmation\"/>\n          {errors.passwordConfirmation && <p className=\"form-error-message\">{errors.passwordConfirmation}</p>}\n\n\n          <label>Bio</label>\n          <textarea\n            name=\"bio\"\n            value={formdata.bio}\n            onChange={handleChange}\n            placeholder=\"Tell why you love gardening\"/>\n          {errors.bio && <p className=\"form-error-message\"> {errors.bio}</p>} \n\n          <ImageUploadField\n            name=\"profile_image\"\n            value={formdata.profile_image}\n            labelText=\"Profile Image\"\n            onChange={handleChange}\n          />\n          {errors.profile_image && <p className=\"form-error-message\">{errors.profileImage}</p>}\n\n\n        </fieldset>\n        <button className=\"button-green button-outline form-sumbit full-length-button\" type=\"submit\">Register</button>\n      </form>\n    </motion.section>\n  \n  )\n}\n\nexport default Register","import React from 'react'\nimport useForm from '../../utils/useform'\nimport { motion } from 'framer-motion'\nimport { useHistory } from 'react-router-dom'\nimport { loginUser } from '../../lib/api'\nimport { setToken  } from '../../lib/auth'\n\n\nfunction Login(){\n\n  const history = useHistory()\n\n\n  //* Captures a users data from login form and stores it in state to be used in login post request\n  const { handleChange, formdata, errors, setErrors } = useForm({\n    email: '',  password: ''\n  })\n\n  //* Handles submitting post request to database to log user in\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      const { data } = await loginUser(formdata)\n      setToken(data.token)\n    \n      history.push('/feed')\n    } catch (err){\n      setErrors(err.response.data)\n    }\n  }\n \n\n  return (\n    <motion.section\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n      className=\"form-container\">\n      <form onSubmit={handleSubmit}>\n        <fieldset>\n\n          <label>Email</label>\n          <input type=\"text\" \n            name=\"email\"\n            vaule={formdata.email}\n            onChange={handleChange}\n            placeholder=\"Email\"/>\n          {errors.email && <p>{errors.email}</p>}\n\n          <label>Password</label>\n          <input type=\"password\" \n            name=\"password\"\n            value={formdata.password}\n            onChange={handleChange}\n            placeholder=\"Password\"/>\n          {errors.password && <p>{errors.password}</p>}\n          {errors.detail && <p className=\"form-error-message\">{errors.detail}</p>}\n          <button className=\"button-green button-outline form-sumbit full-length-button\" type=\"submit\">Login</button>\n        </fieldset>\n      </form>\n    </motion.section>\n  \n  \n  )\n}\n\nexport default Login","import React from 'react'\nimport { getCurrentUser, deleteSingleUser } from '../../lib/api'\nimport { motion } from 'framer-motion'\nimport { useHistory } from 'react-router-dom'\nimport Loader from 'react-loader-spinner'\nimport {  logout } from '../../lib/auth'\n\n\nfunction Profile(){\n  const [currentUser, setCurrentUser] = React.useState(null)\n  const history = useHistory(\n  \n  )\n\n  //*Gets current users details via get request\n  React.useEffect(() => {\n    const getData = async () => {\n      try {\n        const { data } = await getCurrentUser()\n        setCurrentUser(data)\n      } catch (err){\n        console.log(err)\n      }\n    }\n    getData()\n  }, [])\n\n  \n\n  //* Reformats the date from post request\n  const reorderDate = (date) => {\n    const dateArray = date.slice(0, 10).split('-')\n    return `${dateArray[2]}.${dateArray[1]}.${dateArray[0]}`\n  }\n\n  //*Handle deleting the current users profile\n  const handleProfileDelete = async () => {\n    const id = currentUser.id\n    await deleteSingleUser(id)\n    logout()\n    history.push('/')\n  }\n\n  return (\n    <motion.section \n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n      className =\"profile-container\">\n      {currentUser ?\n      \n        <>\n          <article className=\"main-user-details\">\n            <div className=\"name-email-div\">\n              <h3 className=\"username\">{currentUser.username}</h3>\n              <h5 className=\"email\">{currentUser.email}</h5>\n              <p className=\"email\">{`Joined: ${reorderDate(currentUser.dateJoined)}`}</p>\n            </div>\n            <div className=\"user-profile-image-view\">\n              <img src={currentUser.profileImage} alt=\"\" className=\"user-profile-image\"/>\n            </div>\n          </article>\n          <article className=\"user-bio-container\">\n            <p className=\"user-biot-text\">\n              {currentUser.bio}\n            </p>\n          </article>\n          \n          <article className=\"profile-view-reuse-conatiner\">\n            <div className=\"reuse-container-title\">\n              <h3>Friends</h3>\n            </div>\n            <div className=\"friends-container\">\n              {currentUser.friendedBy ?\n                currentUser.friendedBy.map(friend => (\n                 \n                  <div key={friend.id} className=\"friend-image-and-name\">\n                    <div className=\"friend-image\">\n                      <img src={friend.profileImage} alt={friend.name} className=\"reuse-image\"/>\n                    </div>\n                    <div className=\"friend-name-container\">\n                      <p>{friend.username}</p>\n                    </div>\n                  </div> \n                   \n                )) \n                :\n                <Loader type=\"ThreeDots\" color=\"#85837f\" height={80} width={80} className=\"loading-spinner\"/>\n              }\n\n\n\n             \n\n            </div>\n          </article>\n\n          <article className=\"profile-view-reuse-conatiner\">\n            <div className=\"reuse-container-title\">\n              <h3>Posts you created</h3>\n            </div>\n            <div className=\"reuse-container\">\n              <div  className=\"image-and-text\" >\n                <table>\n                  <thead>\n                    <tr>\n                      <th>Date</th>\n                      <th>Post Image</th>\n                      <th>Post Text</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {currentUser.createdPosts ?\n                      currentUser.createdPosts.map(post => (                \n                        <tr key={post.id}>\n                          <td>{reorderDate(post.createdAt)}</td>\n                          <td><img src={post.postImage} alt=\"post image\"/></td>\n                          <td>{post.postText}</td>\n                        </tr>\n                      )) \n                      :\n                      <Loader type=\"ThreeDots\" color=\"#85837f\" height={80} width={80} className=\"loading-spinner\"/>\n                    }\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </article>\n\n\n\n          <article className=\"profile-view-reuse-conatiner\">\n            <div className=\"reuse-container-title\">\n              <h3>Posts you liked</h3>\n            </div>\n            <div className=\"reuse-container\">\n              <div  className=\"image-and-text\" >\n                <table>\n                  <thead>\n                    <tr>\n                      <th>Date</th>\n                      <th>Post Image</th>\n                      <th>Post Text</th>\n                      <th>Post Creator</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {currentUser.likedPosts ?\n                      currentUser.likedPosts.map(post => (\n                 \n\n                        <tr key={post.id}>\n                          <td>{reorderDate(post.createdAt)}</td>\n                          <td><img src={post.postImage} alt=\"post image\" className=\"liked-post-image\"/></td>\n                          <td>{post.postText}</td>\n                          <td>{post.owner.username}</td>\n                        </tr>\n                        \n                   \n                      )) \n                      :\n                      <Loader type=\"ThreeDots\" color=\"#85837f\" height={80} width={80} className=\"loading-spinner\"/>\n\n                    }\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </article>\n\n\n\n          <article className=\"profile-view-reuse-conatiner\">\n            <div className=\"reuse-container-title\">\n              <h3>Comments you made</h3>\n            </div>\n            <div className=\"comments-made-container\">\n              <div  className=\"image-and-text\" >\n                <table>\n                  <thead>\n                    <tr>\n                      <th>Date</th>\n                      <th>Comment</th>\n                      <th>Post Image</th>\n                      <th>Post Text</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {currentUser.postedComments ?\n                      currentUser.postedComments.map(comment => (\n\n                  \n                        <tr key={comment.id}>\n                          <td>{reorderDate(comment.createdAt)}</td>\n                          <td>{comment.text}</td>\n                          <td><img src={comment.post.postImage}/></td>\n                          <td>{comment.post.postText}</td>\n                        </tr>\n                   \n                      )) \n                      :\n                      <Loader type=\"ThreeDots\" color=\"#85837f\" height={80} width={80} className=\"loading-spinner\"/>\n\n                    }\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </article>\n          <div className=\"delete-user-container\">\n            <button className=\"button-red button-outline\" onClick={handleProfileDelete}>Delete Profile</button>\n          </div>\n        </>\n          \n        :\n        <Loader type=\"ThreeDots\" color=\"#85837f\" height={80} width={80} className=\"loading-spinner\"/>\n      }\n    </motion.section>\n  )\n}\n\nexport default Profile","import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport { getSingleUser, friendUser } from '../../lib/api'\nimport { motion } from 'framer-motion'\nimport Loader from 'react-loader-spinner'\n\n\n\nfunction User(){\n  const { id } = useParams()\n\n  const [user, setUser] = React.useState(null)\n  const [addedFriendMessage, setAddedFriendMessage] = React.useState(false)\n\n  React.useEffect(() => {\n    const getData = async () => {\n      try {\n        const { data } = await getSingleUser(id)\n        setUser(data)\n      } catch (err){\n        console.log(err)\n      }\n    }\n    getData()\n  }, [id])\n\n  //*Remove added friend message\n  const removeAddedFriendMessage = () =>  {\n    setTimeout(()=> {\n      setAddedFriendMessage(false) \n    }, 2000)\n  } \n\n\n  const handleAddingFriend = async () => {\n    try {\n      await friendUser(id)\n      setAddedFriendMessage(true)\n      removeAddedFriendMessage()\n    } catch (err){\n      console.log(err)\n    }\n  }\n\n\n  //* Reformats the date from post request\n  const reorderDate = (date) => {\n    const dateArray = date.slice(0, 10).split('-')\n    return `${dateArray[2]}.${dateArray[1]}.${dateArray[0]}`\n  }\n\n\n  return (\n    <motion.section \n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n      className=\"profile-container\">\n      {user ? \n        <>\n          <article className=\"main-user-details\">\n            <div className=\"name-email-div\">\n              <h3 className=\"username\">{user.username}</h3>\n              <h5 className=\"email\">{user.email}</h5>\n              <p className=\"email\">{`Joined: ${reorderDate(user.dateJoined)}`}</p>\n            </div>\n            <div className=\"user-profile-image-view\">\n              <img src={user.profileImage} alt=\"\" className=\"user-profile-image\"/>\n            </div>\n          </article>\n          <article className=\"user-bio-container\">\n            <p className=\"user-biot-text\">\n              {user.bio}\n            </p>\n          </article>\n\n         \n          <article className=\"profile-view-reuse-conatiner\">\n            <div className=\"reuse-container-title\">\n              <h3>Friends</h3>\n            </div>\n            <div className=\"friends-container\">\n              {user.friendedBy ?\n                user.friendedBy.map(friend => (\n                 \n                  <div key={friend.id} className=\"friend-image-and-name\">\n                    <div className=\"friend-image\">\n                      <img src={friend.profileImage} alt={friend.name} className=\"reuse-image\"/>\n                    </div>\n                    <div className=\"friend-name-container\">\n                      <p>{friend.username}</p>\n                    </div>\n                  </div> \n                   \n                )) \n                :\n                <Loader type=\"ThreeDots\" color=\"#85837f\" height={80} width={80} className=\"loading-spinner\"/>\n              }\n\n\n\n             \n\n            </div>\n          </article>\n\n          { addedFriendMessage &&\n          <div className=\"added-friend-message-container\">\n            <p ><strong>{`Great ${user.username} has been added to your friends list`}</strong></p>\n          </div>\n          }\n\n          <div className=\"user-profile-friend-button-container\">\n            <button className=\"button-green button-outline\" onClick={handleAddingFriend}>Add friend</button>\n          </div>\n        </>\n        :\n        <p>Loading</p>\n      }\n    </motion.section>\n  )\n}\n\nexport default User","import React from 'react'\nimport { useSpring, animated } from 'react-spring'\nimport { postMessage, deleteChat } from '../../lib/api' \nfunction CreatedMessage({ id, recipient, communications, getCurrentUser, setCurrentUser }){\n\n  let chatId\n  let recieverId\n\n  //*Handles making text field on chat from a controled input\n  const [messageData, setMessageData] = React.useState({\n    text: '',\n    chat: '',\n    receiver: ''\n  })\n\n\n  //*Handles getting for data to send in message body\n  const handleMessageChangeDetails =  (chatid, recieverid, e) => {\n    chatId = chatid\n    recieverId = recieverid\n    setMessageData({ ...messageData, [e.target.name]: e.target.value, chat: chatId, receiver: recieverId })\n  }\n\n  //*Handles submitting message post request\n  const handleMessageSubmit = async (e) => {\n    e.preventDefault()\n    await postMessage(messageData)\n    setMessageData({ text: '' })\n    const { data } = await getCurrentUser()\n    setCurrentUser(data)\n  }\n\n  //*Handles deleting a message\n  const handleMessageDelete = async (chatid) => {\n    await deleteChat(chatid)\n    const { data } = await getCurrentUser()\n    setCurrentUser(data)\n  }\n\n  useSpring({ config: { duration: 5000 } })\n  const fade = useSpring({ opacity: 1, from: { opacity: 0 } })\n\n  return (\n    <animated.div className=\"chat-container\" style={fade}>\n      <h5>{`You're chatting with ${recipient.username} `}</h5>\n      {communications ?\n        communications.map(message => (\n          <div key={message.id}>\n            <p><strong>{`${message.sender.username}: `}</strong> {`${message.text}`} </p>\n          </div>\n                  \n        ))\n        :\n        <p>No chats yet</p>\n      }\n             \n      <form className=\"chat-form\" onSubmit={handleMessageSubmit}>\n        <fieldset>\n          <input\n            type=\"text\"\n            name=\"text\"\n            value={messageData.text}\n            placeholder=\"Message\"\n            onChange={(e)=> handleMessageChangeDetails(id, recipient.id , e)}\n          />\n                  \n        </fieldset>\n        <button className=\"button-green button-outline\" type=\"submit\" value=\"send\">send</button>\n      </form>\n      <button className=\"button-red button-outline button-small\" onClick={() => handleMessageDelete(id)}>Delete</button>\n    </animated.div> \n  )\n}\n\nexport default CreatedMessage","import React from 'react'\nimport { postMessage } from '../../lib/api' \n\nfunction RecievedMessage({ owner, communications, getCurrentUser, setCurrentUser }){\n  let chatId\n  let recieverId\n  \n  //*Handles making text field on chat from a controled input\n  const [messageData, setMessageData] = React.useState({\n    text: '',\n    chat: '',\n    receiver: ''\n  })\n  \n  \n  //*Handles getting for data to send in message body\n  const handleMessageChangeDetails =  (chatid, recieverid, e) => {\n    chatId = chatid\n    recieverId = recieverid\n    setMessageData({ ...messageData, [e.target.name]: e.target.value, chat: chatId, receiver: recieverId })\n  }\n  \n  //*Handles submitting message post request\n  const handleMessageSubmit = async (e) => {\n    e.preventDefault()\n    await postMessage(messageData)\n    setMessageData({ text: '' })\n    const { data } = await getCurrentUser()\n    setCurrentUser(data)\n  }\n\n  return (\n    < div className=\"chat-container\">\n      <h5>{`You're chatting with ${owner.username} `}</h5>\n      {communications ?\n        communications.map(message => (\n          <div key={message.id}>\n            <p><strong>{`${message.sender.username}: `}</strong> {`${message.text}`} </p>\n          </div>\n      \n        ))\n        :\n        <p>No chats yet</p>\n      }\n \n      <form className=\"chat-form\" onSubmit={handleMessageSubmit}>\n        <fieldset>\n          <input\n            type=\"text\"\n            name=\"text\"\n            value={messageData.text}\n            placeholder=\"Message\"\n            onChange={(e)=> handleMessageChangeDetails(communications[0].chat, communications[0].sender.id , e)}\n          />\n      \n        </fieldset>\n        <button className=\"button-green button-outline\" type=\"submit\" value=\"send\">send</button>\n      </form>\n    </div>\n\n  )\n}\n\nexport default RecievedMessage","import React from 'react'\n\nimport { getAllUsers } from '../../lib/api'\nimport { postChat, getCurrentUser } from '../../lib/api'\nimport { useLocation } from 'react-router-dom'\nimport { isAuthenticated } from '../../lib/auth'\nimport CreatedMessage from './CreatedMessage'\nimport RecievedMessage from './RecievedMessage'\n\n\n\nfunction Footer(){\n\n  const [users, setUsers ] = React.useState(null)\n  const [currentUser, setCurrentUser] = React.useState(null)\n  const [chatboard, setChatboard] = React.useState(false)\n\n  \n  \n  //*Global variables\n  let userId \n  const isLoggedIn = isAuthenticated()\n  \n  \n  const { pathname } = useLocation()\n\n  \n\n  //*Gets current user\n  React.useEffect(() =>{\n    const getData = async () => {\n      try {\n        const { data } = await getAllUsers()\n        const filterUsers = () => data.filter(user =>{\n          return user.username !== 'admin' && user.username !== currentUser?.username\n        })\n        setUsers(filterUsers)\n      } catch (err){\n        console.log(err)\n      }\n    }\n    getData()\n  }, [])\n\n\n\n  //*Handles getting user id\n  const handleUserSelection = async (e) => {\n    userId = e.target.value\n    if (parseInt(userId) !== currentUser.id){\n      await postChat({ recipient: userId })\n    }\n    const { data } = await getCurrentUser()\n    setCurrentUser(data)\n  }\n\n \n \n  //*Handles getting the current user who is logged in details\n  React.useEffect(() =>{\n    const getData = async () => {\n      try {\n        const { data } = await getCurrentUser()\n        setCurrentUser(data)\n      } catch (err){\n        console.log(err)\n      }\n    }\n    getData()\n  }, [pathname])\n  \n  \n  \n \n\n  \n  \n\n  //*Handles showing chat\n  const handleShowChat = () => {\n    setChatboard(true)\n  }\n\n  //*Handles closing chat\n  const handleChatClose = () => {\n    setChatboard(false)\n  }\n\n\n\n\n\n  return (\n    <>\n      {isLoggedIn &&\n      <div className=\"fixed-footer-container\">\n\n        {!chatboard &&\n          <div className=\"show-chat-button\">\n            <button className=\"button-green button-outline button-small\" onClick={handleShowChat}>Open Chat</button>\n          </div>\n        }\n    \n        {chatboard &&\n        \n          <>\n            <div className=\"hide-chat-button\">\n              <button className=\"button-red button-outline button-small\" onClick={handleChatClose}>Close chat</button>\n            </div>\n            \n            <div className=\"chat-master-container\">\n              <div className=\"chat-selection-container\">\n                <p>Choose someone to chat with</p>\n                \n                <form >\n                  <fieldset>\n                    <select onChange={handleUserSelection}>\n                      \n                      {users ? \n                        users.map(user => (\n                          <option \n                            key={user.id} \n                            value={user.id}>\n                            {user.username}\n                          </option>\n                        ))\n                        :\n                        <option>Loading...</option>\n                \n                      }\n                    </select>\n                  </fieldset>\n                </form>\n              </div>\n\n\n              {currentUser?.createdChats ?\n                currentUser.createdChats.map(chat => (\n                  <CreatedMessage key={chat.id}{...chat}\n                    getCurrentUser={getCurrentUser}\n                    setCurrentUser={setCurrentUser}\n                  />\n                  \n                ))\n                :\n                <p></p>\n              }\n              \n              {currentUser?.receivedChats ?\n                currentUser.receivedChats.map(chat => (\n                  <RecievedMessage key={chat.id}{...chat}\n                    getCurrentUser={getCurrentUser}\n                    setCurrentUser={setCurrentUser}\n                  />\n                ))\n                :\n                <p></p>\n              } \n            </div>\n          </>\n        }\n      </div>\n      }\n    </>\n\n\n  )\n}\n\nexport default Footer","import React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { AnimatePresence } from 'framer-motion'\n\nimport Nav from './components/common/Nav'\nimport Home from './components/common/Home'\nimport PostIndex from './components/posts/PostIndex'\nimport Register from './components/auth/Register'\nimport Login from './components/auth/Login'\nimport Profile from './components/user/Profile'\nimport User from './components/user/User'\nimport Footer from './components/common/Footer'\n\nfunction App(){\n  return (\n    <BrowserRouter>\n      <Nav/>\n      <AnimatePresence>\n        <Switch>\n          <Route exact path=\"/\" component={Home}/>\n          <Route path=\"/feed\" component={PostIndex}/>\n          <Route path=\"/register\" component={Register}/>\n          <Route path=\"/login\" component={Login}/>\n          <Route path=\"/profile\" component={Profile}/>\n          <Route path=\"/user/:id\" component={User}/>\n        </Switch>\n      </AnimatePresence>\n      <Footer/>\n    </BrowserRouter>  \n  \n  )\n}\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/main.scss'\nimport App from './App'\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}